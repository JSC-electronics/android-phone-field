package cz.jsc.electronics.phonefield;

import java.util.ArrayList;
import java.util.List;

final class Countries {

    static final List<Country> COUNTRIES = new ArrayList<>();

    static {
        COUNTRIES.add(new Country("ad", "Andorra"));
        COUNTRIES.add(new Country("ae", "United Arab Emirates"));
        COUNTRIES.add(new Country("af", "Afghanistan"));
        COUNTRIES.add(new Country("ag", "Antigua and Barbuda"));
        COUNTRIES.add(new Country("ai", "Anguilla"));
        COUNTRIES.add(new Country("al", "Albania"));
        COUNTRIES.add(new Country("am", "Armenia"));
        COUNTRIES.add(new Country("ao", "Angola"));
        COUNTRIES.add(new Country("aq", "Antarctica"));
        COUNTRIES.add(new Country("ar", "Argentina"));
        COUNTRIES.add(new Country("as", "American Samoa"));
        COUNTRIES.add(new Country("at", "Austria"));
        COUNTRIES.add(new Country("au", "Australia"));
        COUNTRIES.add(new Country("aw", "Aruba"));
        COUNTRIES.add(new Country("ax", "Åland Islands"));
        COUNTRIES.add(new Country("az", "Azerbaijan"));
        COUNTRIES.add(new Country("ba", "Bosnia and Herzegovina"));
        COUNTRIES.add(new Country("bb", "Barbados"));
        COUNTRIES.add(new Country("bd", "Bangladesh"));
        COUNTRIES.add(new Country("be", "Belgium"));
        COUNTRIES.add(new Country("bf", "Burkina Faso"));
        COUNTRIES.add(new Country("bg", "Bulgaria"));
        COUNTRIES.add(new Country("bh", "Bahrain"));
        COUNTRIES.add(new Country("bi", "Burundi"));
        COUNTRIES.add(new Country("bj", "Benin"));
        COUNTRIES.add(new Country("bl", "Saint Barthélemy"));
        COUNTRIES.add(new Country("bm", "Bermuda"));
        COUNTRIES.add(new Country("bn", "Brunei"));
        COUNTRIES.add(new Country("bo", "Bolivia"));
        COUNTRIES.add(new Country("bq", "Caribbean Netherlands"));
        COUNTRIES.add(new Country("br", "Brazil"));
        COUNTRIES.add(new Country("bs", "Bahamas"));
        COUNTRIES.add(new Country("bt", "Bhutan"));
        COUNTRIES.add(new Country("bv", "Bouvet Island"));
        COUNTRIES.add(new Country("bw", "Botswana"));
        COUNTRIES.add(new Country("by", "Belarus"));
        COUNTRIES.add(new Country("bz", "Belize"));
        COUNTRIES.add(new Country("ca", "Canada"));
        COUNTRIES.add(new Country("cc", "Cocos (Keeling) Islands"));
        COUNTRIES.add(new Country("cd", "DR Congo"));
        COUNTRIES.add(new Country("cf", "Central African Republic"));
        COUNTRIES.add(new Country("cg", "Republic of the Congo"));
        COUNTRIES.add(new Country("ch", "Switzerland"));
        COUNTRIES.add(new Country("ci", "Ivory Coast"));
        COUNTRIES.add(new Country("ck", "Cook Islands"));
        COUNTRIES.add(new Country("cl", "Chile"));
        COUNTRIES.add(new Country("cm", "Cameroon"));
        COUNTRIES.add(new Country("cn", "China"));
        COUNTRIES.add(new Country("co", "Colombia"));
        COUNTRIES.add(new Country("cr", "Costa Rica"));
        COUNTRIES.add(new Country("cu", "Cuba"));
        COUNTRIES.add(new Country("cv", "Cape Verde"));
        COUNTRIES.add(new Country("cw", "Curaçao"));
        COUNTRIES.add(new Country("cx", "Christmas Island"));
        COUNTRIES.add(new Country("cy", "Cyprus"));
        COUNTRIES.add(new Country("cz", "Czechia"));
        COUNTRIES.add(new Country("de", "Germany"));
        COUNTRIES.add(new Country("dj", "Djibouti"));
        COUNTRIES.add(new Country("dk", "Denmark"));
        COUNTRIES.add(new Country("dm", "Dominica"));
        COUNTRIES.add(new Country("do", "Dominican Republic"));
        COUNTRIES.add(new Country("dz", "Algeria"));
        COUNTRIES.add(new Country("ec", "Ecuador"));
        COUNTRIES.add(new Country("ee", "Estonia"));
        COUNTRIES.add(new Country("eg", "Egypt"));
        COUNTRIES.add(new Country("eh", "Western Sahara"));
        COUNTRIES.add(new Country("er", "Eritrea"));
        COUNTRIES.add(new Country("es", "Spain"));
        COUNTRIES.add(new Country("et", "Ethiopia"));
        COUNTRIES.add(new Country("fi", "Finland"));
        COUNTRIES.add(new Country("fj", "Fiji"));
        COUNTRIES.add(new Country("fk", "Falkland Islands"));
        COUNTRIES.add(new Country("fm", "Micronesia"));
        COUNTRIES.add(new Country("fo", "Faroe Islands"));
        COUNTRIES.add(new Country("fr", "France"));
        COUNTRIES.add(new Country("ga", "Gabon"));
        COUNTRIES.add(new Country("gb", "United Kingdom"));
        COUNTRIES.add(new Country("gd", "Grenada"));
        COUNTRIES.add(new Country("ge", "Georgia"));
        COUNTRIES.add(new Country("gf", "French Guiana"));
        COUNTRIES.add(new Country("gg", "Guernsey"));
        COUNTRIES.add(new Country("gh", "Ghana"));
        COUNTRIES.add(new Country("gi", "Gibraltar"));
        COUNTRIES.add(new Country("gl", "Greenland"));
        COUNTRIES.add(new Country("gm", "Gambia"));
        COUNTRIES.add(new Country("gn", "Guinea"));
        COUNTRIES.add(new Country("gp", "Guadeloupe"));
        COUNTRIES.add(new Country("gq", "Equatorial Guinea"));
        COUNTRIES.add(new Country("gr", "Greece"));
        COUNTRIES.add(new Country("gs", "South Georgia"));
        COUNTRIES.add(new Country("gt", "Guatemala"));
        COUNTRIES.add(new Country("gu", "Guam"));
        COUNTRIES.add(new Country("gw", "Guinea-Bissau"));
        COUNTRIES.add(new Country("gy", "Guyana"));
        COUNTRIES.add(new Country("hk", "Hong Kong"));
        COUNTRIES.add(new Country("hm", "Heard Island and McDonald Islands"));
        COUNTRIES.add(new Country("hn", "Honduras"));
        COUNTRIES.add(new Country("hr", "Croatia"));
        COUNTRIES.add(new Country("ht", "Haiti"));
        COUNTRIES.add(new Country("hu", "Hungary"));
        COUNTRIES.add(new Country("id", "Indonesia"));
        COUNTRIES.add(new Country("ie", "Ireland"));
        COUNTRIES.add(new Country("il", "Israel"));
        COUNTRIES.add(new Country("im", "Isle of Man"));
        COUNTRIES.add(new Country("in", "India"));
        COUNTRIES.add(new Country("io", "British Indian Ocean Territory"));
        COUNTRIES.add(new Country("iq", "Iraq"));
        COUNTRIES.add(new Country("ir", "Iran"));
        COUNTRIES.add(new Country("is", "Iceland"));
        COUNTRIES.add(new Country("it", "Italy"));
        COUNTRIES.add(new Country("je", "Jersey"));
        COUNTRIES.add(new Country("jm", "Jamaica"));
        COUNTRIES.add(new Country("jo", "Jordan"));
        COUNTRIES.add(new Country("jp", "Japan"));
        COUNTRIES.add(new Country("ke", "Kenya"));
        COUNTRIES.add(new Country("kg", "Kyrgyzstan"));
        COUNTRIES.add(new Country("kh", "Cambodia"));
        COUNTRIES.add(new Country("ki", "Kiribati"));
        COUNTRIES.add(new Country("km", "Comoros"));
        COUNTRIES.add(new Country("kn", "Saint Kitts and Nevis"));
        COUNTRIES.add(new Country("kp", "North Korea"));
        COUNTRIES.add(new Country("kr", "South Korea"));
        COUNTRIES.add(new Country("kw", "Kuwait"));
        COUNTRIES.add(new Country("ky", "Cayman Islands"));
        COUNTRIES.add(new Country("kz", "Kazakhstan"));
        COUNTRIES.add(new Country("la", "Laos"));
        COUNTRIES.add(new Country("lb", "Lebanon"));
        COUNTRIES.add(new Country("lc", "Saint Lucia"));
        COUNTRIES.add(new Country("li", "Liechtenstein"));
        COUNTRIES.add(new Country("lk", "Sri Lanka"));
        COUNTRIES.add(new Country("lr", "Liberia"));
        COUNTRIES.add(new Country("ls", "Lesotho"));
        COUNTRIES.add(new Country("lt", "Lithuania"));
        COUNTRIES.add(new Country("lu", "Luxembourg"));
        COUNTRIES.add(new Country("lv", "Latvia"));
        COUNTRIES.add(new Country("ly", "Libya"));
        COUNTRIES.add(new Country("ma", "Morocco"));
        COUNTRIES.add(new Country("mc", "Monaco"));
        COUNTRIES.add(new Country("md", "Moldova"));
        COUNTRIES.add(new Country("me", "Montenegro"));
        COUNTRIES.add(new Country("mf", "Saint Martin"));
        COUNTRIES.add(new Country("mg", "Madagascar"));
        COUNTRIES.add(new Country("mh", "Marshall Islands"));
        COUNTRIES.add(new Country("mk", "North Macedonia"));
        COUNTRIES.add(new Country("ml", "Mali"));
        COUNTRIES.add(new Country("mm", "Myanmar"));
        COUNTRIES.add(new Country("mn", "Mongolia"));
        COUNTRIES.add(new Country("mo", "Macau"));
        COUNTRIES.add(new Country("mp", "Northern Mariana Islands"));
        COUNTRIES.add(new Country("mq", "Martinique"));
        COUNTRIES.add(new Country("mr", "Mauritania"));
        COUNTRIES.add(new Country("ms", "Montserrat"));
        COUNTRIES.add(new Country("mt", "Malta"));
        COUNTRIES.add(new Country("mu", "Mauritius"));
        COUNTRIES.add(new Country("mv", "Maldives"));
        COUNTRIES.add(new Country("mw", "Malawi"));
        COUNTRIES.add(new Country("mx", "Mexico"));
        COUNTRIES.add(new Country("my", "Malaysia"));
        COUNTRIES.add(new Country("mz", "Mozambique"));
        COUNTRIES.add(new Country("na", "Namibia"));
        COUNTRIES.add(new Country("nc", "New Caledonia"));
        COUNTRIES.add(new Country("ne", "Niger"));
        COUNTRIES.add(new Country("nf", "Norfolk Island"));
        COUNTRIES.add(new Country("ng", "Nigeria"));
        COUNTRIES.add(new Country("ni", "Nicaragua"));
        COUNTRIES.add(new Country("nl", "Netherlands"));
        COUNTRIES.add(new Country("no", "Norway"));
        COUNTRIES.add(new Country("np", "Nepal"));
        COUNTRIES.add(new Country("nr", "Nauru"));
        COUNTRIES.add(new Country("nu", "Niue"));
        COUNTRIES.add(new Country("nz", "New Zealand"));
        COUNTRIES.add(new Country("om", "Oman"));
        COUNTRIES.add(new Country("pa", "Panama"));
        COUNTRIES.add(new Country("pe", "Peru"));
        COUNTRIES.add(new Country("pf", "French Polynesia"));
        COUNTRIES.add(new Country("pg", "Papua New Guinea"));
        COUNTRIES.add(new Country("ph", "Philippines"));
        COUNTRIES.add(new Country("pk", "Pakistan"));
        COUNTRIES.add(new Country("pl", "Poland"));
        COUNTRIES.add(new Country("pm", "Saint Pierre and Miquelon"));
        COUNTRIES.add(new Country("pn", "Pitcairn Islands"));
        COUNTRIES.add(new Country("pr", "Puerto Rico"));
        COUNTRIES.add(new Country("ps", "Palestine"));
        COUNTRIES.add(new Country("pt", "Portugal"));
        COUNTRIES.add(new Country("pw", "Palau"));
        COUNTRIES.add(new Country("py", "Paraguay"));
        COUNTRIES.add(new Country("qa", "Qatar"));
        COUNTRIES.add(new Country("re", "Réunion"));
        COUNTRIES.add(new Country("ro", "Romania"));
        COUNTRIES.add(new Country("rs", "Serbia"));
        COUNTRIES.add(new Country("ru", "Russia"));
        COUNTRIES.add(new Country("rw", "Rwanda"));
        COUNTRIES.add(new Country("sa", "Saudi Arabia"));
        COUNTRIES.add(new Country("sb", "Solomon Islands"));
        COUNTRIES.add(new Country("sc", "Seychelles"));
        COUNTRIES.add(new Country("sd", "Sudan"));
        COUNTRIES.add(new Country("se", "Sweden"));
        COUNTRIES.add(new Country("sg", "Singapore"));
        COUNTRIES.add(new Country("sh", "Saint Helena, Ascension and Tristan da Cunha"));
        COUNTRIES.add(new Country("si", "Slovenia"));
        COUNTRIES.add(new Country("sj", "Svalbard and Jan Mayen"));
        COUNTRIES.add(new Country("sk", "Slovakia"));
        COUNTRIES.add(new Country("sl", "Sierra Leone"));
        COUNTRIES.add(new Country("sm", "San Marino"));
        COUNTRIES.add(new Country("sn", "Senegal"));
        COUNTRIES.add(new Country("so", "Somalia"));
        COUNTRIES.add(new Country("sr", "Suriname"));
        COUNTRIES.add(new Country("ss", "South Sudan"));
        COUNTRIES.add(new Country("st", "São Tomé and Príncipe"));
        COUNTRIES.add(new Country("sv", "El Salvador"));
        COUNTRIES.add(new Country("sx", "Sint Maarten"));
        COUNTRIES.add(new Country("sy", "Syria"));
        COUNTRIES.add(new Country("sz", "Eswatini"));
        COUNTRIES.add(new Country("tc", "Turks and Caicos Islands"));
        COUNTRIES.add(new Country("td", "Chad"));
        COUNTRIES.add(new Country("tf", "French Southern and Antarctic Lands"));
        COUNTRIES.add(new Country("tg", "Togo"));
        COUNTRIES.add(new Country("th", "Thailand"));
        COUNTRIES.add(new Country("tj", "Tajikistan"));
        COUNTRIES.add(new Country("tk", "Tokelau"));
        COUNTRIES.add(new Country("tl", "Timor-Leste"));
        COUNTRIES.add(new Country("tm", "Turkmenistan"));
        COUNTRIES.add(new Country("tn", "Tunisia"));
        COUNTRIES.add(new Country("to", "Tonga"));
        COUNTRIES.add(new Country("tr", "Turkey"));
        COUNTRIES.add(new Country("tt", "Trinidad and Tobago"));
        COUNTRIES.add(new Country("tv", "Tuvalu"));
        COUNTRIES.add(new Country("tw", "Taiwan"));
        COUNTRIES.add(new Country("tz", "Tanzania"));
        COUNTRIES.add(new Country("ua", "Ukraine"));
        COUNTRIES.add(new Country("ug", "Uganda"));
        COUNTRIES.add(new Country("um", "United States Minor Outlying Islands"));
        COUNTRIES.add(new Country("us", "United States"));
        COUNTRIES.add(new Country("uy", "Uruguay"));
        COUNTRIES.add(new Country("uz", "Uzbekistan"));
        COUNTRIES.add(new Country("va", "Vatican City"));
        COUNTRIES.add(new Country("vc", "Saint Vincent and the Grenadines"));
        COUNTRIES.add(new Country("ve", "Venezuela"));
        COUNTRIES.add(new Country("vg", "British Virgin Islands"));
        COUNTRIES.add(new Country("vi", "United States Virgin Islands"));
        COUNTRIES.add(new Country("vn", "Vietnam"));
        COUNTRIES.add(new Country("vu", "Vanuatu"));
        COUNTRIES.add(new Country("wf", "Wallis and Futuna"));
        COUNTRIES.add(new Country("ws", "Samoa"));
        COUNTRIES.add(new Country("xk", "Kosovo"));
        COUNTRIES.add(new Country("ye", "Yemen"));
        COUNTRIES.add(new Country("yt", "Mayotte"));
        COUNTRIES.add(new Country("za", "South Africa"));
        COUNTRIES.add(new Country("zm", "Zambia"));
        COUNTRIES.add(new Country("zw", "Zimbabwe"));
    }

}

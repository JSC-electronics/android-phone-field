/*
 * Copyright 2019 JSC electronics
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package cz.jscelectronics.phonefield;

import java.util.ArrayList;
import java.util.List;

final class Countries {

    static final List<Country> COUNTRIES = new ArrayList<>();

    static {
        COUNTRIES.add(new Country("AD", "Andorra"));
        COUNTRIES.add(new Country("AE", "United Arab Emirates"));
        COUNTRIES.add(new Country("AF", "Afghanistan"));
        COUNTRIES.add(new Country("AG", "Antigua and Barbuda"));
        COUNTRIES.add(new Country("AI", "Anguilla"));
        COUNTRIES.add(new Country("AL", "Albania"));
        COUNTRIES.add(new Country("AM", "Armenia"));
        COUNTRIES.add(new Country("AO", "Angola"));
        COUNTRIES.add(new Country("AQ", "Antarctica"));
        COUNTRIES.add(new Country("AR", "Argentina"));
        COUNTRIES.add(new Country("AS", "American Samoa"));
        COUNTRIES.add(new Country("AT", "Austria"));
        COUNTRIES.add(new Country("AU", "Australia"));
        COUNTRIES.add(new Country("AW", "Aruba"));
        COUNTRIES.add(new Country("AX", "Åland Islands"));
        COUNTRIES.add(new Country("AZ", "Azerbaijan"));
        COUNTRIES.add(new Country("BA", "Bosnia and Herzegovina"));
        COUNTRIES.add(new Country("BB", "Barbados"));
        COUNTRIES.add(new Country("BD", "Bangladesh"));
        COUNTRIES.add(new Country("BE", "Belgium"));
        COUNTRIES.add(new Country("BF", "Burkina Faso"));
        COUNTRIES.add(new Country("BG", "Bulgaria"));
        COUNTRIES.add(new Country("BH", "Bahrain"));
        COUNTRIES.add(new Country("BI", "Burundi"));
        COUNTRIES.add(new Country("BJ", "Benin"));
        COUNTRIES.add(new Country("BL", "Saint Barthélemy"));
        COUNTRIES.add(new Country("BM", "Bermuda"));
        COUNTRIES.add(new Country("BN", "Brunei"));
        COUNTRIES.add(new Country("BO", "Bolivia"));
        COUNTRIES.add(new Country("BQ", "Caribbean Netherlands"));
        COUNTRIES.add(new Country("BR", "Brazil"));
        COUNTRIES.add(new Country("BS", "Bahamas"));
        COUNTRIES.add(new Country("BT", "Bhutan"));
        COUNTRIES.add(new Country("BV", "Bouvet Island"));
        COUNTRIES.add(new Country("BW", "Botswana"));
        COUNTRIES.add(new Country("BY", "Belarus"));
        COUNTRIES.add(new Country("BZ", "Belize"));
        COUNTRIES.add(new Country("CA", "Canada"));
        COUNTRIES.add(new Country("CC", "Cocos (Keeling) Islands"));
        COUNTRIES.add(new Country("CD", "DR Congo"));
        COUNTRIES.add(new Country("CF", "Central African Republic"));
        COUNTRIES.add(new Country("CG", "Republic of the Congo"));
        COUNTRIES.add(new Country("CH", "Switzerland"));
        COUNTRIES.add(new Country("CI", "Ivory Coast"));
        COUNTRIES.add(new Country("CK", "Cook Islands"));
        COUNTRIES.add(new Country("CL", "Chile"));
        COUNTRIES.add(new Country("CM", "Cameroon"));
        COUNTRIES.add(new Country("CN", "China"));
        COUNTRIES.add(new Country("CO", "Colombia"));
        COUNTRIES.add(new Country("CR", "Costa Rica"));
        COUNTRIES.add(new Country("CU", "Cuba"));
        COUNTRIES.add(new Country("CV", "Cape Verde"));
        COUNTRIES.add(new Country("CW", "Curaçao"));
        COUNTRIES.add(new Country("CX", "Christmas Island"));
        COUNTRIES.add(new Country("CY", "Cyprus"));
        COUNTRIES.add(new Country("CZ", "Czechia"));
        COUNTRIES.add(new Country("DE", "Germany"));
        COUNTRIES.add(new Country("DJ", "Djibouti"));
        COUNTRIES.add(new Country("DK", "Denmark"));
        COUNTRIES.add(new Country("DM", "Dominica"));
        COUNTRIES.add(new Country("DO", "Dominican Republic"));
        COUNTRIES.add(new Country("DZ", "Algeria"));
        COUNTRIES.add(new Country("EC", "Ecuador"));
        COUNTRIES.add(new Country("EE", "Estonia"));
        COUNTRIES.add(new Country("EG", "Egypt"));
        COUNTRIES.add(new Country("EH", "Western Sahara"));
        COUNTRIES.add(new Country("ER", "Eritrea"));
        COUNTRIES.add(new Country("ES", "Spain"));
        COUNTRIES.add(new Country("ET", "Ethiopia"));
        COUNTRIES.add(new Country("FI", "Finland"));
        COUNTRIES.add(new Country("FJ", "Fiji"));
        COUNTRIES.add(new Country("FK", "Falkland Islands"));
        COUNTRIES.add(new Country("FM", "Micronesia"));
        COUNTRIES.add(new Country("FO", "Faroe Islands"));
        COUNTRIES.add(new Country("FR", "France"));
        COUNTRIES.add(new Country("GA", "Gabon"));
        COUNTRIES.add(new Country("GB", "United Kingdom"));
        COUNTRIES.add(new Country("GD", "Grenada"));
        COUNTRIES.add(new Country("GE", "Georgia"));
        COUNTRIES.add(new Country("GF", "French Guiana"));
        COUNTRIES.add(new Country("GG", "Guernsey"));
        COUNTRIES.add(new Country("GH", "Ghana"));
        COUNTRIES.add(new Country("GI", "Gibraltar"));
        COUNTRIES.add(new Country("GL", "Greenland"));
        COUNTRIES.add(new Country("GM", "Gambia"));
        COUNTRIES.add(new Country("GN", "Guinea"));
        COUNTRIES.add(new Country("GP", "Guadeloupe"));
        COUNTRIES.add(new Country("GQ", "Equatorial Guinea"));
        COUNTRIES.add(new Country("GR", "Greece"));
        COUNTRIES.add(new Country("GS", "South Georgia"));
        COUNTRIES.add(new Country("GT", "Guatemala"));
        COUNTRIES.add(new Country("GU", "Guam"));
        COUNTRIES.add(new Country("GW", "Guinea-Bissau"));
        COUNTRIES.add(new Country("GY", "Guyana"));
        COUNTRIES.add(new Country("HK", "Hong Kong"));
        COUNTRIES.add(new Country("HM", "Heard Island and McDonald Islands"));
        COUNTRIES.add(new Country("HN", "Honduras"));
        COUNTRIES.add(new Country("HR", "Croatia"));
        COUNTRIES.add(new Country("HT", "Haiti"));
        COUNTRIES.add(new Country("HU", "Hungary"));
        COUNTRIES.add(new Country("ID", "Indonesia"));
        COUNTRIES.add(new Country("IE", "Ireland"));
        COUNTRIES.add(new Country("IL", "Israel"));
        COUNTRIES.add(new Country("IM", "Isle of Man"));
        COUNTRIES.add(new Country("IN", "India"));
        COUNTRIES.add(new Country("IO", "British Indian Ocean Territory"));
        COUNTRIES.add(new Country("IQ", "Iraq"));
        COUNTRIES.add(new Country("IR", "Iran"));
        COUNTRIES.add(new Country("IS", "Iceland"));
        COUNTRIES.add(new Country("IT", "Italy"));
        COUNTRIES.add(new Country("JE", "Jersey"));
        COUNTRIES.add(new Country("JM", "Jamaica"));
        COUNTRIES.add(new Country("JO", "Jordan"));
        COUNTRIES.add(new Country("JP", "Japan"));
        COUNTRIES.add(new Country("KE", "Kenya"));
        COUNTRIES.add(new Country("KG", "Kyrgyzstan"));
        COUNTRIES.add(new Country("KH", "Cambodia"));
        COUNTRIES.add(new Country("KI", "Kiribati"));
        COUNTRIES.add(new Country("KM", "Comoros"));
        COUNTRIES.add(new Country("KN", "Saint Kitts and Nevis"));
        COUNTRIES.add(new Country("KP", "North Korea"));
        COUNTRIES.add(new Country("KR", "South Korea"));
        COUNTRIES.add(new Country("KW", "Kuwait"));
        COUNTRIES.add(new Country("KY", "Cayman Islands"));
        COUNTRIES.add(new Country("KZ", "Kazakhstan"));
        COUNTRIES.add(new Country("LA", "Laos"));
        COUNTRIES.add(new Country("LB", "Lebanon"));
        COUNTRIES.add(new Country("LC", "Saint Lucia"));
        COUNTRIES.add(new Country("LI", "Liechtenstein"));
        COUNTRIES.add(new Country("LK", "Sri Lanka"));
        COUNTRIES.add(new Country("LR", "Liberia"));
        COUNTRIES.add(new Country("LS", "Lesotho"));
        COUNTRIES.add(new Country("LT", "Lithuania"));
        COUNTRIES.add(new Country("LU", "Luxembourg"));
        COUNTRIES.add(new Country("LV", "Latvia"));
        COUNTRIES.add(new Country("LY", "Libya"));
        COUNTRIES.add(new Country("MA", "Morocco"));
        COUNTRIES.add(new Country("MC", "Monaco"));
        COUNTRIES.add(new Country("MD", "Moldova"));
        COUNTRIES.add(new Country("ME", "Montenegro"));
        COUNTRIES.add(new Country("MF", "Saint Martin"));
        COUNTRIES.add(new Country("MG", "Madagascar"));
        COUNTRIES.add(new Country("MH", "Marshall Islands"));
        COUNTRIES.add(new Country("MK", "North Macedonia"));
        COUNTRIES.add(new Country("ML", "Mali"));
        COUNTRIES.add(new Country("MM", "Myanmar"));
        COUNTRIES.add(new Country("MN", "Mongolia"));
        COUNTRIES.add(new Country("MO", "Macau"));
        COUNTRIES.add(new Country("MP", "Northern Mariana Islands"));
        COUNTRIES.add(new Country("MQ", "Martinique"));
        COUNTRIES.add(new Country("MR", "Mauritania"));
        COUNTRIES.add(new Country("MS", "Montserrat"));
        COUNTRIES.add(new Country("MT", "Malta"));
        COUNTRIES.add(new Country("MU", "Mauritius"));
        COUNTRIES.add(new Country("MV", "Maldives"));
        COUNTRIES.add(new Country("MW", "Malawi"));
        COUNTRIES.add(new Country("MX", "Mexico"));
        COUNTRIES.add(new Country("MY", "Malaysia"));
        COUNTRIES.add(new Country("MZ", "Mozambique"));
        COUNTRIES.add(new Country("NA", "Namibia"));
        COUNTRIES.add(new Country("NC", "New Caledonia"));
        COUNTRIES.add(new Country("NE", "Niger"));
        COUNTRIES.add(new Country("NF", "Norfolk Island"));
        COUNTRIES.add(new Country("NG", "Nigeria"));
        COUNTRIES.add(new Country("NI", "Nicaragua"));
        COUNTRIES.add(new Country("NL", "Netherlands"));
        COUNTRIES.add(new Country("NO", "Norway"));
        COUNTRIES.add(new Country("NP", "Nepal"));
        COUNTRIES.add(new Country("NR", "Nauru"));
        COUNTRIES.add(new Country("NU", "Niue"));
        COUNTRIES.add(new Country("NZ", "New Zealand"));
        COUNTRIES.add(new Country("OM", "Oman"));
        COUNTRIES.add(new Country("PA", "Panama"));
        COUNTRIES.add(new Country("PE", "Peru"));
        COUNTRIES.add(new Country("PF", "French Polynesia"));
        COUNTRIES.add(new Country("PG", "Papua New Guinea"));
        COUNTRIES.add(new Country("PH", "Philippines"));
        COUNTRIES.add(new Country("PK", "Pakistan"));
        COUNTRIES.add(new Country("PL", "Poland"));
        COUNTRIES.add(new Country("PM", "Saint Pierre and Miquelon"));
        COUNTRIES.add(new Country("PN", "Pitcairn Islands"));
        COUNTRIES.add(new Country("PR", "Puerto Rico"));
        COUNTRIES.add(new Country("PS", "Palestine"));
        COUNTRIES.add(new Country("PT", "Portugal"));
        COUNTRIES.add(new Country("PW", "Palau"));
        COUNTRIES.add(new Country("PY", "Paraguay"));
        COUNTRIES.add(new Country("QA", "Qatar"));
        COUNTRIES.add(new Country("RE", "Réunion"));
        COUNTRIES.add(new Country("RO", "Romania"));
        COUNTRIES.add(new Country("RS", "Serbia"));
        COUNTRIES.add(new Country("RU", "Russia"));
        COUNTRIES.add(new Country("RW", "Rwanda"));
        COUNTRIES.add(new Country("SA", "Saudi Arabia"));
        COUNTRIES.add(new Country("SB", "Solomon Islands"));
        COUNTRIES.add(new Country("SC", "Seychelles"));
        COUNTRIES.add(new Country("SD", "Sudan"));
        COUNTRIES.add(new Country("SE", "Sweden"));
        COUNTRIES.add(new Country("SG", "Singapore"));
        COUNTRIES.add(new Country("SH", "Saint Helena, Ascension and Tristan da Cunha"));
        COUNTRIES.add(new Country("SI", "Slovenia"));
        COUNTRIES.add(new Country("SJ", "Svalbard and Jan Mayen"));
        COUNTRIES.add(new Country("SK", "Slovakia"));
        COUNTRIES.add(new Country("SL", "Sierra Leone"));
        COUNTRIES.add(new Country("SM", "San Marino"));
        COUNTRIES.add(new Country("SN", "Senegal"));
        COUNTRIES.add(new Country("SO", "Somalia"));
        COUNTRIES.add(new Country("SR", "Suriname"));
        COUNTRIES.add(new Country("SS", "South Sudan"));
        COUNTRIES.add(new Country("ST", "São Tomé and Príncipe"));
        COUNTRIES.add(new Country("SV", "El Salvador"));
        COUNTRIES.add(new Country("SX", "Sint Maarten"));
        COUNTRIES.add(new Country("SY", "Syria"));
        COUNTRIES.add(new Country("SZ", "Eswatini"));
        COUNTRIES.add(new Country("TC", "Turks and Caicos Islands"));
        COUNTRIES.add(new Country("TD", "Chad"));
        COUNTRIES.add(new Country("TF", "French Southern and Antarctic Lands"));
        COUNTRIES.add(new Country("TG", "Togo"));
        COUNTRIES.add(new Country("TH", "Thailand"));
        COUNTRIES.add(new Country("TJ", "Tajikistan"));
        COUNTRIES.add(new Country("TK", "Tokelau"));
        COUNTRIES.add(new Country("TL", "Timor-Leste"));
        COUNTRIES.add(new Country("TM", "Turkmenistan"));
        COUNTRIES.add(new Country("TN", "Tunisia"));
        COUNTRIES.add(new Country("TO", "Tonga"));
        COUNTRIES.add(new Country("TR", "Turkey"));
        COUNTRIES.add(new Country("TT", "Trinidad and Tobago"));
        COUNTRIES.add(new Country("TV", "Tuvalu"));
        COUNTRIES.add(new Country("TW", "Taiwan"));
        COUNTRIES.add(new Country("TZ", "Tanzania"));
        COUNTRIES.add(new Country("UA", "Ukraine"));
        COUNTRIES.add(new Country("UG", "Uganda"));
        COUNTRIES.add(new Country("UM", "United States Minor Outlying Islands"));
        COUNTRIES.add(new Country("US", "United States"));
        COUNTRIES.add(new Country("UY", "Uruguay"));
        COUNTRIES.add(new Country("UZ", "Uzbekistan"));
        COUNTRIES.add(new Country("VA", "Vatican City"));
        COUNTRIES.add(new Country("VC", "Saint Vincent and the Grenadines"));
        COUNTRIES.add(new Country("VE", "Venezuela"));
        COUNTRIES.add(new Country("VG", "British Virgin Islands"));
        COUNTRIES.add(new Country("VI", "United States Virgin Islands"));
        COUNTRIES.add(new Country("VN", "Vietnam"));
        COUNTRIES.add(new Country("VU", "Vanuatu"));
        COUNTRIES.add(new Country("WF", "Wallis and Futuna"));
        COUNTRIES.add(new Country("WS", "Samoa"));
        COUNTRIES.add(new Country("XK", "Kosovo"));
        COUNTRIES.add(new Country("YE", "Yemen"));
        COUNTRIES.add(new Country("YT", "Mayotte"));
        COUNTRIES.add(new Country("ZA", "South Africa"));
        COUNTRIES.add(new Country("ZM", "Zambia"));
        COUNTRIES.add(new Country("ZW", "Zimbabwe"));
    }

}
